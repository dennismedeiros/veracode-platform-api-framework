//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.05.22 at 05:14:14 PM EDT 
//


package com.dennismedeiros.veracode.platform.api.pojo.portfolio;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for DeploymentMethodType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="DeploymentMethodType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Not Specified"/>
 *     &lt;enumeration value="Web Based"/>
 *     &lt;enumeration value="Enterprise Application Enhancement"/>
 *     &lt;enumeration value="Client/Server"/>
 *     &lt;enumeration value="Mobile"/>
 *     &lt;enumeration value="Stand Alone"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "DeploymentMethodType")
@XmlEnum
public enum DeploymentMethodType {

    @XmlEnumValue("Not Specified")
    NOT_SPECIFIED("Not Specified"),
    @XmlEnumValue("Web Based")
    WEB_BASED("Web Based"),
    @XmlEnumValue("Enterprise Application Enhancement")
    ENTERPRISE_APPLICATION_ENHANCEMENT("Enterprise Application Enhancement"),
    @XmlEnumValue("Client/Server")
    CLIENT_SERVER("Client/Server"),
    @XmlEnumValue("Mobile")
    MOBILE("Mobile"),
    @XmlEnumValue("Stand Alone")
    STAND_ALONE("Stand Alone");
    private final String value;

    DeploymentMethodType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DeploymentMethodType fromValue(String v) {
        for (DeploymentMethodType c: DeploymentMethodType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
