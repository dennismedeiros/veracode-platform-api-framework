//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.03.30 at 11:12:48 AM EDT 
//


package com.dennismedeiros.veracode.platform.api.pojo.reporting.analysis.sast;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementWrapper;
import javax.xml.bind.annotation.XmlType;

import com.dennismedeiros.veracode.platform.api.pojo.reporting.analysis.AnalysisReport;
import com.dennismedeiros.veracode.platform.api.pojo.reporting.analysis.Find;
import com.dennismedeiros.veracode.platform.api.pojo.reporting.analysis.Weakness;

@XmlAccessorType(XmlAccessType.NONE)
@XmlType(propOrder = { "modules" })
public class StaticAnalysisReport extends AnalysisReport implements StaticAnalysis {

	@XmlElementWrapper(name = "modules")
    @XmlElement(name="module", type=ModuleFile.class)
	private List<Module> modules;
	
    @XmlAttribute(name = "rating", required = true)
    protected String rating;
    @XmlAttribute(name = "next_scan_due")
    protected String nextScanDue;
    @XmlAttribute(name = "analysis_size_bytes")
    protected Long analysisSizeBytes;
    @XmlAttribute(name = "scan_exit_status_id")
    protected BigInteger scanExitStatusId;
    @XmlAttribute(name = "scan_exit_status_desc")
    protected String scanExitStatusDesc;

    //Constructor
    protected StaticAnalysisReport() { super(); }
    
    public StaticAnalysisReport(Long Id, String name, Find[] findings) {
    	super();
    	
    	this.id = Id;
    	this.scanName = name;
    	//this.findings;
    }
    
    @Override
	public List<Module> getModules() {
        return modules;
    }
    /* (non-Javadoc)
	 * @see com.veracode.platform.parsers.jaxb.templates.detailedreport.IAnalysisType#getRating()
	 */
    @Override
	public String getRating() {
        return rating;
    }

    /* (non-Javadoc)
	 * @see com.veracode.platform.parsers.jaxb.templates.detailedreport.IAnalysisType#getNextScanDue()
	 */
    @Override
	public String getNextScanDue() {
        return nextScanDue;
    }

    /* (non-Javadoc)
	 * @see com.veracode.platform.parsers.jaxb.templates.detailedreport.IAnalysisType#getAnalysisSizeBytes()
	 */
    @Override
	public Long getAnalysisSizeBytes() {
        return analysisSizeBytes;
    }

    /* (non-Javadoc)
	 * @see com.veracode.platform.parsers.jaxb.templates.detailedreport.IAnalysisType#setAnalysisSizeBytes(java.lang.Long)
	 */
    //@Override
	public void setAnalysisSizeBytes(Long value) {
        this.analysisSizeBytes = value;
    }

    /* (non-Javadoc)
	 * @see com.veracode.platform.parsers.jaxb.templates.detailedreport.IAnalysisType#getScanExitStatusId()
	 */
    @Override
	public BigInteger getScanExitStatusId() {
        return scanExitStatusId;
    }

    /* (non-Javadoc)
	 * @see com.veracode.platform.parsers.jaxb.templates.detailedreport.IAnalysisType#getScanExitStatusDesc()
	 */
    @Override
	public String getScanExitStatusDesc() {
        return scanExitStatusDesc;
    }

	public List<StaticAnalysisFlaw> getFlaws(){
    	List<StaticAnalysisFlaw> flaws = new ArrayList<StaticAnalysisFlaw>();
    	
    	this.findings.forEach(f -> flaws.add((StaticAnalysisFlaw) f));
    	return flaws;
    }
    
    @Override
	public List<Weakness> getWeaknesses() {
		return null; //(List<Weakness>)this.findings;
	}
    
	@Override
	public List<Find> getFindings() {
		return this.findings;
	}

	public Boolean isSandbox() {
		return false;
	}
}
